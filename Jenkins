pipeline {
    agent any

    tools {
        nodejs 'NodeJS 22.9.0'  // NodeJS installation configured in Jenkins
        sonarqube 'SonarQube Scanner'  // SonarQube scanner tool installed via Jenkins
    }

    environment {
        SONARQUBE_SERVER_URL = 'http://localhost:9000'  // Your SonarQube server URL
        SONARQUBE_PROJECT_KEY = 'my-node-app'  // Unique project key for SonarQube
        SONARQUBE_TOKEN = 'sqa_dbcd5ed5ea4d1bd493689f334f756fa99788a6c0'  // Your SonarQube token
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Set Permissions') {
            steps {
                sh 'chmod -R +x node_modules/.bin'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Unit Test') {
            steps {
                sh 'npx mocha'
            }
        }

        stage('Code Quality') {
            steps {
                script {
                    withSonarQubeEnv('SonarQube-Local') {  // Use your SonarQube server name here
                        sh 'sonar-scanner \
                            -Dsonar.projectKey=${SONARQUBE_PROJECT_KEY} \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=${SONARQUBE_SERVER_URL} \
                            -Dsonar.login=${SONARQUBE_TOKEN}'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                sh 'npm run start --port=4000 &'
            }
        }
    }

    post {
        always {
            deleteDir()
        }
        success {
            echo 'Build, Test, and Deploy stages completed successfully!'
        }
        failure {
            echo 'Build failed. Check logs for details.'
        }
    }
}
